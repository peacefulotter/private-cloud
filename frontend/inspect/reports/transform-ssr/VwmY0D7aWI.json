{"resolvedId":"/home/edge/dev/js/private-cloud/src/components/Directory/Menu/MenuCheckbox.tsx","transforms":[{"name":"__load__","result":"import Checkbox from \"./Checkbox\";\nimport { IconTypes } from 'solid-icons';\n\ninterface IMenuCheckbox {\n    Icon: IconTypes;\n    name: string;\n    color: string;\n    onClick: (isChecked: boolean) => void;\n    behaveAsButton?: boolean;\n}\n\nexport default function MenuCheckbox( { Icon, name, color, onClick, behaveAsButton }: IMenuCheckbox ) \n{    \n\n    const iconCheckedStyle = (isChecked: boolean) => isChecked ? `stroke-${color}-200 text-${color}-200` : ''\n\n    return (\n        <Checkbox \n            className={`btn group relative text-${color}-200 hover:bg-${color}-200`} \n            checkedClass={`bg-${color}-500 hover:bg-${color}-400`}\n            onClick={onClick}\n            behaveAsButton={behaveAsButton}\n        >\n            { (isChecked, hover) => <>\n                <Icon class={`btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}` } />\n                { false && hover && <p class={`btn-text group-hover:text-${color}-700`}>{name}</p> }\n            </>}\n            \n        </Checkbox>\n    )\n}","start":1675681822244,"end":1675681822244},{"name":"solid","result":"import { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<p\", \" class=\\\"\", \"\\\">\", \"</p>\"];\nimport Checkbox from \"./Checkbox\";\nexport default function MenuCheckbox({\n  Icon,\n  name,\n  color,\n  onClick,\n  behaveAsButton\n}) {\n  const iconCheckedStyle = isChecked => isChecked ? `stroke-${color}-200 text-${color}-200` : '';\n  return _$createComponent(Checkbox, {\n    className: `btn group relative text-${color}-200 hover:bg-${color}-200`,\n    checkedClass: `bg-${color}-500 hover:bg-${color}-400`,\n    onClick: onClick,\n    behaveAsButton: behaveAsButton,\n    children: (isChecked, hover) => [_$createComponent(Icon, {\n      get [\"class\"]() {\n        return `btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}`;\n      }\n    }), false && hover && _$ssr(_tmpl$, _$ssrHydrationKey(), `btn-text group-hover:text-${_$escape(color, true)}-700`, _$escape(name))]\n  });\n}","start":1675681822244,"end":1675681822249,"order":"pre"},{"name":"vite:define","result":"import { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<p\", \" class=\\\"\", \"\\\">\", \"</p>\"];\nimport Checkbox from \"./Checkbox\";\nexport default function MenuCheckbox({\n  Icon,\n  name,\n  color,\n  onClick,\n  behaveAsButton\n}) {\n  const iconCheckedStyle = isChecked => isChecked ? `stroke-${color}-200 text-${color}-200` : '';\n  return _$createComponent(Checkbox, {\n    className: `btn group relative text-${color}-200 hover:bg-${color}-200`,\n    checkedClass: `bg-${color}-500 hover:bg-${color}-400`,\n    onClick: onClick,\n    behaveAsButton: behaveAsButton,\n    children: (isChecked, hover) => [_$createComponent(Icon, {\n      get [\"class\"]() {\n        return `btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}`;\n      }\n    }), false && hover && _$ssr(_tmpl$, _$ssrHydrationKey(), `btn-text group-hover:text-${_$escape(color, true)}-700`, _$escape(name))]\n  });\n}","start":1675681822249,"end":1675681822249,"order":"normal"},{"name":"vite:import-analysis","result":"import { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<p\", \" class=\\\"\", \"\\\">\", \"</p>\"];\nimport Checkbox from \"/src/components/Directory/Menu/Checkbox.tsx\";\nexport default function MenuCheckbox({\n  Icon,\n  name,\n  color,\n  onClick,\n  behaveAsButton\n}) {\n  const iconCheckedStyle = isChecked => isChecked ? `stroke-${color}-200 text-${color}-200` : '';\n  return _$createComponent(Checkbox, {\n    className: `btn group relative text-${color}-200 hover:bg-${color}-200`,\n    checkedClass: `bg-${color}-500 hover:bg-${color}-400`,\n    onClick: onClick,\n    behaveAsButton: behaveAsButton,\n    children: (isChecked, hover) => [_$createComponent(Icon, {\n      get [\"class\"]() {\n        return `btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}`;\n      }\n    }), false && hover && _$ssr(_tmpl$, _$ssrHydrationKey(), `btn-text group-hover:text-${_$escape(color, true)}-700`, _$escape(name))]\n  });\n}","start":1675681822249,"end":1675681822249,"order":"normal"}]}
