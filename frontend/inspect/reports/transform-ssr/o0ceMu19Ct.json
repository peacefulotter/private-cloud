{"resolvedId":"/home/edge/dev/js/private-cloud/src/components/FileIcon.tsx","transforms":[{"name":"__load__","result":"import { IconProps, IconTypes } from \"solid-icons\";\nimport { FaRegularFileAudio, FaRegularFileLines, FaRegularFile, FaRegularFileImage, FaRegularFileVideo } from \"solid-icons/fa\";\n\nconst EXTENSIONS_ICON = new Proxy<{ [key: string]: IconTypes }>( {\n    'png|jpg|jpeg': FaRegularFileImage,\n    'md|txt|pdf': FaRegularFileLines,\n    'mp3': FaRegularFileAudio,\n    'mp4': FaRegularFileVideo,\n}, {\n    get: (target, property) => {\n        for ( let k in target )\n            if ( new RegExp(k).test(property as string) )\n                return target[k]\n        return FaRegularFile\n    }\n} )\n\ninterface IFileIcon extends IconProps {\n    extension: string;\n    size: number;\n}\n\nexport default function FileIcon( { extension, size, ...props }: IFileIcon )\n{\n    const Icon = EXTENSIONS_ICON[extension]\n    // TODO: rm em\n    return <Icon size={`${size}em`} {...props} />\n}","start":1675681822233,"end":1675681822233},{"name":"solid","result":"import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { FaRegularFileAudio, FaRegularFileLines, FaRegularFile, FaRegularFileImage, FaRegularFileVideo } from \"solid-icons/fa\";\nconst EXTENSIONS_ICON = new Proxy({\n  'png|jpg|jpeg': FaRegularFileImage,\n  'md|txt|pdf': FaRegularFileLines,\n  'mp3': FaRegularFileAudio,\n  'mp4': FaRegularFileVideo\n}, {\n  get: (target, property) => {\n    for (let k in target) if (new RegExp(k).test(property)) return target[k];\n    return FaRegularFile;\n  }\n});\nexport default function FileIcon({\n  extension,\n  size,\n  ...props\n}) {\n  const Icon = EXTENSIONS_ICON[extension];\n  // TODO: rm em\n  return _$createComponent(Icon, _$mergeProps({\n    size: `${size}em`\n  }, props));\n}","start":1675681822233,"end":1675681822238,"order":"pre"},{"name":"vite:define","result":"import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { FaRegularFileAudio, FaRegularFileLines, FaRegularFile, FaRegularFileImage, FaRegularFileVideo } from \"solid-icons/fa\";\nconst EXTENSIONS_ICON = new Proxy({\n  'png|jpg|jpeg': FaRegularFileImage,\n  'md|txt|pdf': FaRegularFileLines,\n  'mp3': FaRegularFileAudio,\n  'mp4': FaRegularFileVideo\n}, {\n  get: (target, property) => {\n    for (let k in target) if (new RegExp(k).test(property)) return target[k];\n    return FaRegularFile;\n  }\n});\nexport default function FileIcon({\n  extension,\n  size,\n  ...props\n}) {\n  const Icon = EXTENSIONS_ICON[extension];\n  // TODO: rm em\n  return _$createComponent(Icon, _$mergeProps({\n    size: `${size}em`\n  }, props));\n}","start":1675681822238,"end":1675681822238,"order":"normal"},{"name":"vite:import-analysis","result":"import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { FaRegularFileAudio, FaRegularFileLines, FaRegularFile, FaRegularFileImage, FaRegularFileVideo } from \"solid-icons/fa\";\nconst EXTENSIONS_ICON = new Proxy({\n  'png|jpg|jpeg': FaRegularFileImage,\n  'md|txt|pdf': FaRegularFileLines,\n  'mp3': FaRegularFileAudio,\n  'mp4': FaRegularFileVideo\n}, {\n  get: (target, property) => {\n    for (let k in target) if (new RegExp(k).test(property)) return target[k];\n    return FaRegularFile;\n  }\n});\nexport default function FileIcon({\n  extension,\n  size,\n  ...props\n}) {\n  const Icon = EXTENSIONS_ICON[extension];\n  // TODO: rm em\n  return _$createComponent(Icon, _$mergeProps({\n    size: `${size}em`\n  }, props));\n}","start":1675681822238,"end":1675681822239,"order":"normal"}]}
