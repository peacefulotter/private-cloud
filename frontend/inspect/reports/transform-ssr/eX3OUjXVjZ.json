{"resolvedId":"/home/edge/dev/js/private-cloud/src/requests/RequestsService.ts","transforms":[{"name":"__load__","result":"import axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\n\nconst HOST = 'localhost'\nconst PORT = 3001\n\n// TODO: wrong proxy\nconst proxy = {\n    host: HOST,\n    port: PORT\n}\n\nconst formHeader = { \"Content-Type\": \"multipart/form-data\" }\n\nexport default (prefix: string) => { \n\n    const buildURL = (prefix: string, path: string) => `http://${HOST}:${PORT}` + prefix + path\n\n    const responseHandler = <T>( url: string, cb?: (res: T) => void ) => ( { status, data }: AxiosResponse<T>) => {\n        console.log(status, url);\n        if ( cb ) cb(data) \n    }\n\n    const get = <T>( path: string, params: any, cb?: (res: T) => void, err?: (res: T) => void, config?: AxiosRequestConfig<T> ) =>\n    {\n        const url = buildURL( prefix, path );\n        return axios\n            .get<T>( url, { ...config, params, proxy } )\n            .then( responseHandler(url, cb) )\n            .catch( responseHandler(url, err) )\n    }\n\n    const post = <T>( path: string, data: FormData, config: AxiosRequestConfig<any>, cb?: (res: T) => void, err?: (res: T) => void ) =>\n    {\n        const url = buildURL( prefix, path );\n        axios\n            .post<T>( url, data, { ...config, headers: formHeader, proxy } )\n            .then( responseHandler(url, cb) )\n            .catch( responseHandler(url, err) )\n    }\n\n    const downloadBlob = (blob: any) => {\n        const link = document.createElement(\"a\");\n        link.href = URL.createObjectURL(blob);\n        const id =  'download-link'\n        link.setAttribute('id', id)\n        link.setAttribute(\"download\", 'files.zip');\n        document.body.appendChild(link);\n        link.click();\n    }\n\n    return { get, post, downloadBlob }\n}","start":1675682476837,"end":1675682476837},{"name":"vite:esbuild","result":"import axios from \"axios\";\nconst HOST = \"localhost\";\nconst PORT = 3001;\nconst proxy = {\n  host: HOST,\n  port: PORT\n};\nconst formHeader = { \"Content-Type\": \"multipart/form-data\" };\nexport default (prefix) => {\n  const buildURL = (prefix2, path) => `http://${HOST}:${PORT}` + prefix2 + path;\n  const responseHandler = (url, cb) => ({ status, data }) => {\n    console.log(status, url);\n    if (cb)\n      cb(data);\n  };\n  const get = (path, params, cb, err, config) => {\n    const url = buildURL(prefix, path);\n    return axios.get(url, { ...config, params, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const post = (path, data, config, cb, err) => {\n    const url = buildURL(prefix, path);\n    axios.post(url, data, { ...config, headers: formHeader, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const downloadBlob = (blob) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    const id = \"download-link\";\n    link.setAttribute(\"id\", id);\n    link.setAttribute(\"download\", \"files.zip\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return { get, post, downloadBlob };\n};\n","start":1675682476837,"end":1675682476838,"order":"normal"},{"name":"vite:define","result":"import axios from \"axios\";\nconst HOST = \"localhost\";\nconst PORT = 3001;\nconst proxy = {\n  host: HOST,\n  port: PORT\n};\nconst formHeader = { \"Content-Type\": \"multipart/form-data\" };\nexport default (prefix) => {\n  const buildURL = (prefix2, path) => `http://${HOST}:${PORT}` + prefix2 + path;\n  const responseHandler = (url, cb) => ({ status, data }) => {\n    console.log(status, url);\n    if (cb)\n      cb(data);\n  };\n  const get = (path, params, cb, err, config) => {\n    const url = buildURL(prefix, path);\n    return axios.get(url, { ...config, params, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const post = (path, data, config, cb, err) => {\n    const url = buildURL(prefix, path);\n    axios.post(url, data, { ...config, headers: formHeader, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const downloadBlob = (blob) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    const id = \"download-link\";\n    link.setAttribute(\"id\", id);\n    link.setAttribute(\"download\", \"files.zip\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return { get, post, downloadBlob };\n};\n","start":1675682476838,"end":1675682476838,"order":"normal"},{"name":"vite:import-analysis","result":"import axios from \"axios\";\nconst HOST = \"localhost\";\nconst PORT = 3001;\nconst proxy = {\n  host: HOST,\n  port: PORT\n};\nconst formHeader = { \"Content-Type\": \"multipart/form-data\" };\nexport default (prefix) => {\n  const buildURL = (prefix2, path) => `http://${HOST}:${PORT}` + prefix2 + path;\n  const responseHandler = (url, cb) => ({ status, data }) => {\n    console.log(status, url);\n    if (cb)\n      cb(data);\n  };\n  const get = (path, params, cb, err, config) => {\n    const url = buildURL(prefix, path);\n    return axios.get(url, { ...config, params, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const post = (path, data, config, cb, err) => {\n    const url = buildURL(prefix, path);\n    axios.post(url, data, { ...config, headers: formHeader, proxy }).then(responseHandler(url, cb)).catch(responseHandler(url, err));\n  };\n  const downloadBlob = (blob) => {\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    const id = \"download-link\";\n    link.setAttribute(\"id\", id);\n    link.setAttribute(\"download\", \"files.zip\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return { get, post, downloadBlob };\n};\n","start":1675682476838,"end":1675682476838,"order":"normal"}]}
