{"resolvedId":"/home/edge/dev/js/private-cloud/src/components/Directory/Menu/PathBreadcrumb.tsx","transforms":[{"name":"__load__","result":"\nimport { FiHome } from 'solid-icons/fi';\nimport { For } from 'solid-js';\nimport { Link, useLocation } from 'solid-start';\n\nconst Breadcrumb = ({ children }: any) => {\n    // Children.toArray(children)\n    const resolved = children(() => children).toArray()\n    return (\n        <nav>\n            <ol class=\"flex items-center space-x-2\">{resolved}</ol> \n        </nav>\n    );\n};\n\nconst BreadcrumbSeparator = () => (\n    <svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"0\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"h-5 w-5 text-gray-500\" data-testid=\"flowbite-breadcrumb-separator\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>\n)\n  \nconst BreadcrumbItem = ( { children, icon, href, hasPrev }: any) => {\n    const Icon = icon;\n    return (\n        <li class='group'>\n            <Link href={href} class=\"btn\">\n                { icon ? <Icon class=\"btn-icon\" /> : null }\n                <p class=\"btn-text\">{ decodeURI( children ) }</p>\n            </Link>\n        </li>\n    );\n};\n\nconst PathBreadcrumb = () => {\n    const { pathname } = useLocation()\n    const unveil = pathname.split('/').filter((e) => e !== '')\n    const navigations = unveil.reduce( \n        (prev: string[], cur: string) =>\n            [...prev, (prev.length > 0 ? prev[prev.length - 1] : '')  + '/' + cur + '/']\n        , \n        [] as string[]\n    )\n\n    return (\n        <Breadcrumb aria-label=\"Default breadcrumb example\">\n            <BreadcrumbItem href=\"/\" icon={FiHome}>Home</BreadcrumbItem>\n            <BreadcrumbSeparator />\n            <For each={unveil}>\n                {(path, i) => \n                    <>\n                        <BreadcrumbItem hasPrev={true} href={navigations[i()]}>\n                            {path}\n                        </BreadcrumbItem>\n                        <BreadcrumbSeparator />\n                    </> \n                }\n            </For>\n        </Breadcrumb>\n    )\n}\n\nexport default PathBreadcrumb;","start":1675682060721,"end":1675682060721},{"name":"solid","result":"import { template as _$template } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { esm as _esm } from \"solid-refresh\";\nimport { shouldWarnAndDecline as _shouldWarnAndDecline } from \"solid-refresh\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<nav><ol class=\"flex items-center space-x-2\"></ol></nav>`, 4),\n  _tmpl$2 = /*#__PURE__*/_$template(`<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"0\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"h-5 w-5 text-gray-500\" data-testid=\"flowbite-breadcrumb-separator\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>`, 4),\n  _tmpl$3 = /*#__PURE__*/_$template(`<p class=\"btn-text\"></p>`, 2),\n  _tmpl$4 = /*#__PURE__*/_$template(`<li class=\"group\"></li>`, 2);\nimport { FiHome } from 'solid-icons/fi';\nimport { For } from 'solid-js';\nimport { Link, useLocation } from 'solid-start';\nexport const $$registrations = {};\nconst _Hot$$Breadcrumb = ({\n  children\n}) => {\n  // Children.toArray(children)\n  const resolved = children(() => children).toArray();\n  return (() => {\n    const _el$ = _$getNextElement(_tmpl$),\n      _el$2 = _el$.firstChild;\n    _$insert(_el$2, resolved);\n    return _el$;\n  })();\n};\n$$registrations._Hot$$Breadcrumb = {\n  component: _Hot$$Breadcrumb,\n  id: \"_Hot$$Breadcrumb\"\n};\nconst {\n  handler: _handler,\n  Component: _Component\n} = _esm($$registrations._Hot$$Breadcrumb, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod => {\n  _handler(_mod) && import.meta.hot.invalidate();\n});\nconst Breadcrumb = _Component;\nconst _Hot$$BreadcrumbSeparator = () => _$getNextElement(_tmpl$2);\n$$registrations._Hot$$BreadcrumbSeparator = {\n  component: _Hot$$BreadcrumbSeparator,\n  id: \"_Hot$$BreadcrumbSeparator\"\n};\nconst {\n  handler: _handler2,\n  Component: _Component2\n} = _esm($$registrations._Hot$$BreadcrumbSeparator, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod2 => {\n  _handler2(_mod2) && import.meta.hot.invalidate();\n});\nconst BreadcrumbSeparator = _Component2;\nconst _Hot$$BreadcrumbItem = ({\n  children,\n  icon,\n  href,\n  hasPrev\n}) => {\n  const Icon = icon;\n  return (() => {\n    const _el$4 = _$getNextElement(_tmpl$4);\n    _$insert(_el$4, _$createComponent(Link, {\n      href: href,\n      \"class\": \"btn\",\n      get children() {\n        return [_$memo(() => icon ? _$createComponent(Icon, {\n          \"class\": \"btn-icon\"\n        }) : null), (() => {\n          const _el$5 = _$getNextElement(_tmpl$3);\n          _$insert(_el$5, () => decodeURI(children));\n          return _el$5;\n        })()];\n      }\n    }));\n    return _el$4;\n  })();\n};\n$$registrations._Hot$$BreadcrumbItem = {\n  component: _Hot$$BreadcrumbItem,\n  id: \"_Hot$$BreadcrumbItem\"\n};\nconst {\n  handler: _handler3,\n  Component: _Component3\n} = _esm($$registrations._Hot$$BreadcrumbItem, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod3 => {\n  _handler3(_mod3) && import.meta.hot.invalidate();\n});\nconst BreadcrumbItem = _Component3;\nconst _Hot$$PathBreadcrumb = () => {\n  const {\n    pathname\n  } = useLocation();\n  const unveil = pathname.split('/').filter(e => e !== '');\n  const navigations = unveil.reduce((prev, cur) => [...prev, (prev.length > 0 ? prev[prev.length - 1] : '') + '/' + cur + '/'], []);\n  return _$createComponent(Breadcrumb, {\n    \"aria-label\": \"Default breadcrumb example\",\n    get children() {\n      return [_$createComponent(BreadcrumbItem, {\n        href: \"/\",\n        icon: FiHome,\n        children: \"Home\"\n      }), _$createComponent(BreadcrumbSeparator, {}), _$createComponent(For, {\n        each: unveil,\n        children: (path, i) => [_$createComponent(BreadcrumbItem, {\n          hasPrev: true,\n          get href() {\n            return navigations[i()];\n          },\n          children: path\n        }), _$createComponent(BreadcrumbSeparator, {})]\n      })];\n    }\n  });\n};\n$$registrations._Hot$$PathBreadcrumb = {\n  component: _Hot$$PathBreadcrumb,\n  id: \"_Hot$$PathBreadcrumb\"\n};\nconst {\n  handler: _handler4,\n  Component: _Component4\n} = _esm($$registrations._Hot$$PathBreadcrumb, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod4 => {\n  _handler4(_mod4) && import.meta.hot.invalidate();\n});\nconst PathBreadcrumb = _Component4;\nexport default PathBreadcrumb;\nif (_shouldWarnAndDecline()) if (import.meta.hot) import.meta.hot.decline();","start":1675682060721,"end":1675682060740,"order":"pre"},{"name":"vite:import-analysis","result":"import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/Directory/Menu/PathBreadcrumb.tsx\");import { template as _$template } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { memo as _$memo } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { insert as _$insert } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { esm as _esm } from \"/@solid-refresh\";\nimport { shouldWarnAndDecline as _shouldWarnAndDecline } from \"/@solid-refresh\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<nav><ol class=\"flex items-center space-x-2\"></ol></nav>`, 4),\n  _tmpl$2 = /*#__PURE__*/_$template(`<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"0\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" class=\"h-5 w-5 text-gray-500\" data-testid=\"flowbite-breadcrumb-separator\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>`, 4),\n  _tmpl$3 = /*#__PURE__*/_$template(`<p class=\"btn-text\"></p>`, 2),\n  _tmpl$4 = /*#__PURE__*/_$template(`<li class=\"group\"></li>`, 2);\nimport { FiHome } from '/node_modules/.vite/deps/solid-icons_fi.js?v=2963516b';\nimport { For } from '/node_modules/.vite/deps/solid-js.js?v=2963516b';\nimport { Link, useLocation } from '/node_modules/solid-start/index.tsx?v=2963516b';\nexport const $$registrations = {};\nconst _Hot$$Breadcrumb = ({\n  children\n}) => {\n  // Children.toArray(children)\n  const resolved = children(() => children).toArray();\n  return (() => {\n    const _el$ = _$getNextElement(_tmpl$),\n      _el$2 = _el$.firstChild;\n    _$insert(_el$2, resolved);\n    return _el$;\n  })();\n};\n$$registrations._Hot$$Breadcrumb = {\n  component: _Hot$$Breadcrumb,\n  id: \"_Hot$$Breadcrumb\"\n};\nconst {\n  handler: _handler,\n  Component: _Component\n} = _esm($$registrations._Hot$$Breadcrumb, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod => {\n  _handler(_mod) && import.meta.hot.invalidate();\n});\nconst Breadcrumb = _Component;\nconst _Hot$$BreadcrumbSeparator = () => _$getNextElement(_tmpl$2);\n$$registrations._Hot$$BreadcrumbSeparator = {\n  component: _Hot$$BreadcrumbSeparator,\n  id: \"_Hot$$BreadcrumbSeparator\"\n};\nconst {\n  handler: _handler2,\n  Component: _Component2\n} = _esm($$registrations._Hot$$BreadcrumbSeparator, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod2 => {\n  _handler2(_mod2) && import.meta.hot.invalidate();\n});\nconst BreadcrumbSeparator = _Component2;\nconst _Hot$$BreadcrumbItem = ({\n  children,\n  icon,\n  href,\n  hasPrev\n}) => {\n  const Icon = icon;\n  return (() => {\n    const _el$4 = _$getNextElement(_tmpl$4);\n    _$insert(_el$4, _$createComponent(Link, {\n      href: href,\n      \"class\": \"btn\",\n      get children() {\n        return [_$memo(() => icon ? _$createComponent(Icon, {\n          \"class\": \"btn-icon\"\n        }) : null), (() => {\n          const _el$5 = _$getNextElement(_tmpl$3);\n          _$insert(_el$5, () => decodeURI(children));\n          return _el$5;\n        })()];\n      }\n    }));\n    return _el$4;\n  })();\n};\n$$registrations._Hot$$BreadcrumbItem = {\n  component: _Hot$$BreadcrumbItem,\n  id: \"_Hot$$BreadcrumbItem\"\n};\nconst {\n  handler: _handler3,\n  Component: _Component3\n} = _esm($$registrations._Hot$$BreadcrumbItem, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod3 => {\n  _handler3(_mod3) && import.meta.hot.invalidate();\n});\nconst BreadcrumbItem = _Component3;\nconst _Hot$$PathBreadcrumb = () => {\n  const {\n    pathname\n  } = useLocation();\n  const unveil = pathname.split('/').filter(e => e !== '');\n  const navigations = unveil.reduce((prev, cur) => [...prev, (prev.length > 0 ? prev[prev.length - 1] : '') + '/' + cur + '/'], []);\n  return _$createComponent(Breadcrumb, {\n    \"aria-label\": \"Default breadcrumb example\",\n    get children() {\n      return [_$createComponent(BreadcrumbItem, {\n        href: \"/\",\n        icon: FiHome,\n        children: \"Home\"\n      }), _$createComponent(BreadcrumbSeparator, {}), _$createComponent(For, {\n        each: unveil,\n        children: (path, i) => [_$createComponent(BreadcrumbItem, {\n          hasPrev: true,\n          get href() {\n            return navigations[i()];\n          },\n          children: path\n        }), _$createComponent(BreadcrumbSeparator, {})]\n      })];\n    }\n  });\n};\n$$registrations._Hot$$PathBreadcrumb = {\n  component: _Hot$$PathBreadcrumb,\n  id: \"_Hot$$PathBreadcrumb\"\n};\nconst {\n  handler: _handler4,\n  Component: _Component4\n} = _esm($$registrations._Hot$$PathBreadcrumb, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod4 => {\n  _handler4(_mod4) && import.meta.hot.invalidate();\n});\nconst PathBreadcrumb = _Component4;\nexport default PathBreadcrumb;\nif (_shouldWarnAndDecline()) if (import.meta.hot) import.meta.hot.decline();","start":1675682060740,"end":1675682060741,"order":"normal"}]}
