{"resolvedId":"/home/edge/dev/js/private-cloud/src/components/Directory/Menu/MenuCheckbox.tsx","transforms":[{"name":"__load__","result":"import Checkbox from \"./Checkbox\";\nimport { IconTypes } from 'solid-icons';\n\ninterface IMenuCheckbox {\n    Icon: IconTypes;\n    name: string;\n    color: string;\n    onClick: (isChecked: boolean) => void;\n    behaveAsButton?: boolean;\n}\n\nexport default function MenuCheckbox( { Icon, name, color, onClick, behaveAsButton }: IMenuCheckbox ) \n{    \n\n    const iconCheckedStyle = (isChecked: boolean) => isChecked ? `stroke-${color}-200 text-${color}-200` : ''\n\n    return (\n        <Checkbox \n            className={`btn group relative text-${color}-200 hover:bg-${color}-200`} \n            checkedClass={`bg-${color}-500 hover:bg-${color}-400`}\n            onClick={onClick}\n            behaveAsButton={behaveAsButton}\n        >\n            { (isChecked, hover) => <>\n                <Icon class={`btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}` } />\n                { false && hover && <p class={`btn-text group-hover:text-${color}-700`}>{name}</p> }\n            </>}\n            \n        </Checkbox>\n    )\n}","start":1675682060741,"end":1675682060741},{"name":"solid","result":"import { template as _$template } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { className as _$className } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { esm as _esm } from \"solid-refresh\";\nimport { shouldWarnAndDecline as _shouldWarnAndDecline } from \"solid-refresh\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<p></p>`, 2);\nimport Checkbox from \"./Checkbox\";\nexport const $$registrations = {};\nconst _Hot$$MenuCheckbox = function MenuCheckbox({\n  Icon,\n  name,\n  color,\n  onClick,\n  behaveAsButton\n}) {\n  const iconCheckedStyle = isChecked => isChecked ? `stroke-${color}-200 text-${color}-200` : '';\n  return _$createComponent(Checkbox, {\n    className: `btn group relative text-${color}-200 hover:bg-${color}-200`,\n    checkedClass: `bg-${color}-500 hover:bg-${color}-400`,\n    onClick: onClick,\n    behaveAsButton: behaveAsButton,\n    children: (isChecked, hover) => [_$createComponent(Icon, {\n      get [\"class\"]() {\n        return `btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}`;\n      }\n    }), false && hover && (() => {\n      const _el$ = _$getNextElement(_tmpl$);\n      _$className(_el$, `btn-text group-hover:text-${color}-700`);\n      _$insert(_el$, name);\n      return _el$;\n    })()]\n  });\n};\n$$registrations._Hot$$MenuCheckbox = {\n  component: _Hot$$MenuCheckbox,\n  id: \"_Hot$$MenuCheckbox\"\n};\nconst {\n  handler: _handler,\n  Component: _Component\n} = _esm($$registrations._Hot$$MenuCheckbox, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod => {\n  _handler(_mod) && import.meta.hot.invalidate();\n});\nexport default _Component;\nif (_shouldWarnAndDecline()) if (import.meta.hot) import.meta.hot.decline();","start":1675682060741,"end":1675682060751,"order":"pre"},{"name":"vite:import-analysis","result":"import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/Directory/Menu/MenuCheckbox.tsx\");import { template as _$template } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { insert as _$insert } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { className as _$className } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=2963516b\";\nimport { esm as _esm } from \"/@solid-refresh\";\nimport { shouldWarnAndDecline as _shouldWarnAndDecline } from \"/@solid-refresh\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<p></p>`, 2);\nimport Checkbox from \"/src/components/Directory/Menu/Checkbox.tsx\";\nexport const $$registrations = {};\nconst _Hot$$MenuCheckbox = function MenuCheckbox({\n  Icon,\n  name,\n  color,\n  onClick,\n  behaveAsButton\n}) {\n  const iconCheckedStyle = isChecked => isChecked ? `stroke-${color}-200 text-${color}-200` : '';\n  return _$createComponent(Checkbox, {\n    className: `btn group relative text-${color}-200 hover:bg-${color}-200`,\n    checkedClass: `bg-${color}-500 hover:bg-${color}-400`,\n    onClick: onClick,\n    behaveAsButton: behaveAsButton,\n    children: (isChecked, hover) => [_$createComponent(Icon, {\n      get [\"class\"]() {\n        return `btn-icon group-hover:stroke-${color}-700 ${iconCheckedStyle(isChecked)}`;\n      }\n    }), false && hover && (() => {\n      const _el$ = _$getNextElement(_tmpl$);\n      _$className(_el$, `btn-text group-hover:text-${color}-700`);\n      _$insert(_el$, name);\n      return _el$;\n    })()]\n  });\n};\n$$registrations._Hot$$MenuCheckbox = {\n  component: _Hot$$MenuCheckbox,\n  id: \"_Hot$$MenuCheckbox\"\n};\nconst {\n  handler: _handler,\n  Component: _Component\n} = _esm($$registrations._Hot$$MenuCheckbox, import.meta.hot);\nif (import.meta.hot) import.meta.hot.accept(_mod => {\n  _handler(_mod) && import.meta.hot.invalidate();\n});\nexport default _Component;\nif (_shouldWarnAndDecline()) if (import.meta.hot) import.meta.hot.decline();","start":1675682060751,"end":1675682060752,"order":"normal"}]}
